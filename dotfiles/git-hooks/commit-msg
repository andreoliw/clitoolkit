#!/usr/bin/env python3
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".
import sys


def abort_push(message):
    print('\n' + message)
    sys.exit(1)

import subprocess
current_branch = subprocess.getoutput('git rev-parse --abbrev-ref HEAD')
if not current_branch.startswith('issue/') and not current_branch == 'hotfix':
    abort_push("Branch name must start with 'issue/', or be 'hotfix'")

with open(sys.argv[1]) as handle:
    commit_message = handle.read()

if commit_message.startswith('--wip--'):
    sys.exit(0)

issue_id_string = commit_message.split()[0]
if issue_id_string[0] != '#':
    abort_push('Commit message: First char must be #')

possible_issue_id = issue_id_string[1:]
if not possible_issue_id.isdigit():
    abort_push("Commit message: Invalid issue ID: '{}'".format(possible_issue_id))

issue_id = int(possible_issue_id)
if not current_branch.startswith('issue/{}'.format(issue_id)):
    abort_push('Commit message: Issue ID does not match branch name')

sys.exit(0)
