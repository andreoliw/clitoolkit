[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.8"]

[tool.black]
line-length = 120

[tool.nitpick]
ignore_styles = [
  "py://nitpick/resources/any/commitlint",
  "py://nitpick/resources/python/310",
  "py://nitpick/resources/python/311",
  "py://nitpick/resources/python/312",
  "py://nitpick/resources/python/38",
  "py://nitpick/resources/python/autoflake",
  "py://nitpick/resources/python/bandit",
  "py://nitpick/resources/python/github-workflow",
  "py://nitpick/resources/python/mypy",
  "py://nitpick/resources/python/pylint",
  "py://nitpick/resources/python/readthedocs",
  "py://nitpick/resources/python/stable",
  "py://nitpick/resources/python/tox",
]
# nitpick-start (auto-generated by "nitpick init --suggest" 0.34.0)
# Styles added to the Nitpick Style Library will be appended to the end of the 'style' key.
# If you don't want a style, move it to the 'ignore_styles' key.
# nitpick-end
style = [
  "py://nitpick/resources/any/codeclimate",
  "py://nitpick/resources/any/commitizen",
  "py://nitpick/resources/any/editorconfig",
  "py://nitpick/resources/any/git-legal",
  "py://nitpick/resources/any/pre-commit-hooks",
  "py://nitpick/resources/any/prettier",
  "py://nitpick/resources/markdown/markdownlint",
  "py://nitpick/resources/python/39",
  "py://nitpick/resources/python/absent",
  "py://nitpick/resources/python/black",
  "py://nitpick/resources/python/flake8",
  "py://nitpick/resources/python/ipython",
  "py://nitpick/resources/python/isort",
  "py://nitpick/resources/python/poetry",
  "py://nitpick/resources/python/poetry-editable",
  "py://nitpick/resources/python/poetry-venv",
  "py://nitpick/resources/python/pre-commit-hooks",
  "py://nitpick/resources/python/radon",
  "py://nitpick/resources/python/sonar-python",
  "py://nitpick/resources/shell/bashate",
  "py://nitpick/resources/shell/shellcheck",
  "py://nitpick/resources/shell/shfmt",
  "py://nitpick/resources/toml/toml-sort",
]

[tool.poetry]
authors = ["W. Augusto Andreoli <andreoliwa@gmail.com>"]
# Trove classifiers
# Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Plugins",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: MacOS",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3 :: Only",
]
description = "Python CLI library, tools and scripts to help in everyday life"
keywords = ["cli", "python3"]
license = "MIT"
name = "clib"
readme = "README.md"
repository = "https://github.com/andreoliwa/python-clib"
version = "0.10.0"

[tool.poetry.dependencies]
click = "*"
colorlog = "*"
pendulum = "*"
phonenumbers = "*"
plumbum = "*"
postal = {optional = true, version = "*"}
prettyconf = "*"
python = "^3.9"
python-slugify = "*"
requests = "*"
requests-html = "*"
"ruamel.yaml" = "*"

[tool.poetry.dependencies.pylint]
optional = true
version = "*"

[tool.poetry.dev-dependencies]
coverage = "*"
docutils = "*"
ipdb = "*"
ipython = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
Sphinx = "*"
testfixtures = "*"
tox = "*"

[tool.poetry.extras]
lint = ["pylint"]
# Those optional packages are only available on macOS. To install them:
# poetry install --extras macos
macos = ["postal"]

[tool.poetry.scripts]
backup-full = "clib.files:backup_full"
contacts = "clib.contacts:contacts"
docker-find = "clib.docker:docker_find"
docker-volume = "clib.docker:docker_volume"
merge-dirs = "clib.rename:merge_dirs"
postgresx = "clib.db:postgresx"
pypub = "clib.dev.packaging:pypub"
pytestx = "clib.dev:pytestx"
rename-slugify = "clib.rename:rename_slugify"
rm-broken-symlinks = "clib.files:rm_broken_symlinks"

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
trailing_comma_inline_array = true
