[tool.nitpick]
style = ["https://raw.githubusercontent.com/andreoliwa/nitpick/develop/nitpick-style.toml"]

[tool.poetry]
name = "clib"
version = "0.10.0"
description = "Python CLI library, tools and scripts to help in everyday life"
authors = ["W. Augusto Andreoli <andreoliwa@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/andreoliwa/python-clib"
keywords = ["python3", "cli"]
# Trove classifiers
# Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Plugins",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
]

[tool.poetry.scripts]
backup-full = "clib.files:backup_full"
docker-find = "clib.docker:docker_find"
docker-volume = "clib.docker:docker_volume"
poetryx = "clib.dev.packaging:poetryx"
postgresx = "clib.db:postgresx"
pycharmx = "clib.dev:pycharmx"
pypub = "clib.dev.packaging:pypub"
pytestx = "clib.dev:pytestx"
rm-broken-symlinks = "clib.files:rm_broken_symlinks"
rename-slugify = "clib.files:rename_slugify"
contacts = "clib.contacts:contacts"

[tool.poetry.dependencies]
python = "^3.7"
argcomplete = "*"
click = "*"
colorlog = "*"
requests = "*"
SQLAlchemy = "*"
plumbum = "*"
prettyconf = "*"
requests-html = "*"
pendulum = "*"
python-slugify = "*"
postal = "*"
"ruamel.yaml" = "*"
phonenumbers = "*"

[tool.poetry.extras]
# Those optional packages are only available on macOS. To install them:
# poetry install --extras macos
macos = ["postal"]

[tool.poetry.dev-dependencies]
coverage = "*"
docutils = "*"
pytest-cov = "*"
pytest = "*"
Sphinx = "*"
tox = "*"
ipython = "*"
ipdb = "*"
pylint = "*"

[tool.black]
line-length = 120

[dummy.clib]
# TODO tool.poetry.scripts are still not working properly; the scripts are created but not added to the PATH. Temporary workaround:
# Every time the scripts below change, run the following commands:
commands = """
cd && z clib
poetry update && poetry run poetryx setup-py && pyclean_dist
test $? -eq 0 && cd && pipx uninstall clib
pipx install -e --spec ~/Code/python-clib/ clib
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
